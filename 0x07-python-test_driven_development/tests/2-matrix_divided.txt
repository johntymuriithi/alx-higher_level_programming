# Setup: Import the module and function
>>> mod = __import__("2-matrix_divided")
>>> matrix_divided = mod.matrix_divided

# Function Documentation
>>> len(mod.__doc__) > 1
True

# Function Documentation
>>> len(matrix_divided.__doc__) > 1
True

>>> matrix = [[4, 2], [2, 4]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[2.0, 1.0], [1.0, 2.0]]

>>> matrix = [[4, 2], [2, 4]]
>>> div = 2.2
>>> matrix_divided(matrix, div)
[[1.82, 0.91], [0.91, 1.82]]

>>> matrix = [[4, 2], [2, 4]]
>>> div = 0
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix = [[4, 'hello'], [2, 'k']]
>>> div = 9
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[4, 10, 9, 10], [2, 4, 7]]
>>> div = 9
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix = [[4, 10], [2, 4]]
>>> div = "hello"
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Using extra arguments:
>>> matrix = [[1, 2, 3], [4, 5, 6.7]]
>>> matrix_divided(matrix, 2, 33)
Traceback (most recent call last):
	...
TypeError: matrix_divided() takes 2 positional arguments but 3 were given

# Using too few arguments:
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix)
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix = [[4, 2], [2, 4]]
>>> div = float('inf')
>>> matrix_divided(matrix, div)
[[0.0, 0.0], [0.0, 0.0]]
